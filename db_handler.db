from sqlalchemy import create_engine, Column, Integer, String, DateTime, func
from sqlalchemy.orm import declarative_base, sessionmaker

Base = declarative_base()
engine = create_engine("sqlite:///blackjack_results.db", echo=False)
Session = sessionmaker(bind=engine)
session = Session()

class GameResult(Base):
    __tablename__ = "game_results"
    id = Column(Integer, primary_key=True)
    player_name = Column(String, nullable=False)
    player_score = Column(Integer, nullable=False)
    dealer_score = Column(Integer, nullable=False)
    result = Column(String, nullable=False)
    timestamp = Column(DateTime, default=func.now())

def init_db():
    Base.metadata.create_all(engine)

def save_game_result(player_name, player_score, dealer_score, result):
    game_result = GameResult(player_name=player_name, player_score=player_score,
                             dealer_score=dealer_score, result=result)
    session.add(game_result)
    session.commit()

def fetch_game_history(limit=10):
    return session.query(GameResult).order_by(GameResult.timestamp.desc()).limit(limit).all()
